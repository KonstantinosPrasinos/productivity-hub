@use '@/styles/variables' as v;
@use '@/styles/index' as i;
@use '@/styles/mixins' as m;

.container {
  display: inline-flex;
  position: relative;
  width: 100%;
  flex-shrink: 0;
}

.subContainer {
  @extend .Rounded-Container, .Stack-Container, .Has-Shadow;
  width: 100%;

  padding: v.$symmetrical-padding;
  gap: 6px;
  cursor: pointer;
  box-sizing: border-box;
  opacity: 1;
  height: min-content;

  order: 1;
  overflow: hidden;
  max-height: 100%;
}

.topLine {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.titleContainer {
  font-size: v.$font-m;
  text-overflow: ellipsis;
  overflow: hidden;
  text-wrap: wrap;
  white-space: pre-wrap;
  line-height: 1.25em;
  opacity: 0.9;
}

.infoContainer {
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  gap: v.$base-gap;

  &.repeats {
    width: 100%;
    flex-direction: row;
    justify-content: space-between;
    gap: 0;
  }
}

.streakContainer {
  display: inline-block;
}

.task {
  @extend .Horizontal-Flex-Container;

  justify-content: space-between;
  width: 100%;

  &:not(:last-child) {
    margin: 6px 0;
  }

  &:last-child:not(:only-child)  {
    margin-top: 6px;
  }
}

.detailsList {
  @extend .Stack-Container;
  @include m.Label-Large;
  gap: 6px;
  max-width: calc(100% - 2.95em - 10px);
}

.repeatDetails {
  @extend .Horizontal-Flex-Container;
  @include m.Label-Medium;
  & > div {
    @extend.Horizontal-Flex-Container;
    gap: 6px;
  }

  width: 100%;
  gap: 0.5em;

  & > div {
    text-overflow: ellipsis;
    overflow-x: hidden;
    white-space: nowrap;
    display: inline-flex;
    align-items: center;
    gap: 0.5em;

    &.repeatSeparator {
      text-align: center;
      width: auto;
    }
  }
}

.tasksContainer {
  @extend .Stack-Container;
  
  gap: 0;
}

.expandButton {
  display: flex;
  align-items: center;
  transition: transform 0.2s ease-in-out;
  opacity: v.$opacity-low;
}

.expandButtonUpsideDown {
  transform: rotate(180deg);
}